using System;
using System.IO;
using System.Net;
using System.Text;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace ReacSys.RealEstate.Business4.Tests
{
    /*
     * The report manager uses microsoft sql server reporting services 
     * to create report as pdf, xlsx, docx or other files.
     * The manager has some logic you want to test. But for integration
     * testing you have to run an real reporting service in your
     * automation test environment. Which is difficult. So, this
     * examples uses a faked and selfhosted reporting service.
     */
    public class ReportManager
    {
        ReportManager()
        { }
        
        byte[] BuildPdf(int id)
        {
            // Uses Microsoft.Reporting to render a report.
            var report = new ServerReport(...);
            report.LoadReportDefinition(...);
            report.SetParameters(...);            
            return report.Render("PDF", ...); 
        }
    }

    /*
     * Integration test for report manager, which uses microsoft reporting services.
     * The test runs an selfhosted mocked reporting service, so you do not need an
     * running reporting service in your test environment.
     */
    [TestClass]
    public class ReportManagerTests
    {  
        [TestMethod]
        public void Build_expose_pdf()
        {            
            if (!HttpListener.IsSupported)
            {
                Assert.Inconclusive();
                return;
            }

            var port = new Random((int) DateTime.Now.Ticks).Next(60000, 64000);

            var listener = new HttpListener();
            listener.Prefixes.Add("http://localhost:" + port + "/reportserver/");
            listener.Start();

            StartContext(listener);

            var manager = new ReportManager();
            var expose = manager.BuildPdf(10);
            
            listener.Close();

            var filepath = Path.Combine(Path.GetTempPath(), "build_expose_pdf_test.pdf");
            File.WriteAllBytes(filepath, expose);
            Assert.IsTrue(expose.Length > 10000);
        }
        
        private static void StartContext(HttpListener listener)
        {          
            listener.BeginGetContext(state =>
            {
                var lstnr = state.AsyncState as HttpListener;
                HttpListenerContext context;
                try
                {
                    context = lstnr.EndGetContext(state);
                }
                catch
                {
                    // Exception occurs, when test ends.
                    return;
                }

                var request = context.Request;

                // Read content of request.
                string content;
                using (var receiveStream = request.InputStream)
                using (var readStream = new StreamReader(receiveStream, Encoding.UTF8))
                {
                    content = readStream.ReadToEnd();
                }

                // Select corresponding response.
                string body;
                if (request.Headers["SOAPAction"].EndsWith("/ListSecureMethods\""))
                {
                    body = listSecureMethodsResponse;
                }
                else if (request.Headers["SOAPAction"].EndsWith("/LoadReportDefinition2\""))
                {
                    body = loadReportDefinition2Response;
                }
                else if (request.Headers["SOAPAction"].EndsWith("/ResetExecution2\""))
                {
                    body = resetExecution2Response;
                }
                else if (request.Headers["SOAPAction"].EndsWith("/SetExecutionParameters2\""))
                {
                    body = setExecutionParameters2Response;
                }
                else if (request.Headers["SOAPAction"].EndsWith("/Render2\""))
                {
                    body = render2Response;
                }
                else if (request.Headers["SOAPAction"].EndsWith("/GetExecutionInfo2\""))
                {
                    body = getExecutionInfo2Response;
                }
                else
                {
                    body = string.Empty;
                }

                // Write content to response.
                var bytes = new UTF8Encoding().GetBytes(body);
                context.Response.ContentType = "text/xml";
                context.Response.OutputStream.Write(bytes, 0, bytes.Length);
                context.Response.Close();

                // Start again and wait for next request.
                StartContext(listener);
            }, listener);
        }
        
        /*
         * Constants for the responses. These are working for our special case at reactive systems.
         * You may have to edit these for your purpose. But, at the moment you see the
         * structure of the responding SOAP messages.
         */
        
        const string listSecureMethodsResponse = "<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">    <soap:Header>        <ServerInfoHeader xmlns=\"http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices\">            <ReportServerVersionNumber>2015.130.4259.00</ReportServerVersionNumber>            <ReportServerEdition>Standard</ReportServerEdition>            <ReportServerVersion>Microsoft SQL Server Reporting Services Version 13.0.4259.0</ReportServerVersion>            <ReportServerDateTime>2019-12-31T15:49:29</ReportServerDateTime>        </ServerInfoHeader>    </soap:Header>    <soap:Body>        <ListSecureMethodsResponse xmlns=\"http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices\">            <ListSecureMethodsResult />        </ListSecureMethodsResponse>    </soap:Body></soap:Envelope>";
            
			  const string loadReportDefinition2Response = "<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">    <soap:Header>        <ExecutionHeader xmlns=\"http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices\">            <ExecutionID>n3hzmyfikddjsu45duioeebm</ExecutionID>        </ExecutionHeader>        <ServerInfoHeader xmlns=\"http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices\">            <ReportServerVersionNumber>2015.130.4259.00</ReportServerVersionNumber>            <ReportServerEdition>Standard</ReportServerEdition>            <ReportServerVersion>Microsoft SQL Server Reporting Services Version 13.0.4259.0</ReportServerVersion>            <ReportServerDateTime>2019-12-31T15:58:52</ReportServerDateTime>        </ServerInfoHeader>    </soap:Header>    <soap:Body>        <LoadReportDefinition2Response xmlns=\"http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices\">            <executionInfo>                <HasSnapshot>false</HasSnapshot>                <NeedsProcessing>true</NeedsProcessing>                <AllowQueryExecution>true</AllowQueryExecution>                <CredentialsRequired>false</CredentialsRequired>                <ParametersRequired>false</ParametersRequired>                <ExpirationDateTime>2019-12-31T15:08:52.4680306Z</ExpirationDateTime>                <ExecutionDateTime>0001-01-01T00:00:00</ExecutionDateTime>                <NumPages>0</NumPages>                <Parameters>                    <ReportParameter>                        <Name>ImmobilienId</Name>                        <Type>Integer</Type>                        <Nullable>false</Nullable>                        <AllowBlank>false</AllowBlank>                        <MultiValue>false</MultiValue>                        <QueryParameter>true</QueryParameter>                        <Prompt>ImmobilienId</Prompt>                        <PromptUser>true</PromptUser>                        <ValidValuesQueryBased>false</ValidValuesQueryBased>                        <DefaultValuesQueryBased>false</DefaultValuesQueryBased>                        <DefaultValues>                            <Value>1052</Value>                        </DefaultValues>                        <State>HasValidValue</State>                    </ReportParameter>                    <ReportParameter>                        <Name>MapDistance</Name>                        <Type>Float</Type>                        <Nullable>false</Nullable>                        <AllowBlank>false</AllowBlank>                        <MultiValue>false</MultiValue>                        <QueryParameter>false</QueryParameter>                        <Prompt>MapDistance</Prompt>                        <PromptUser>true</PromptUser>                        <ValidValuesQueryBased>false</ValidValuesQueryBased>                        <DefaultValuesQueryBased>false</DefaultValuesQueryBased>                        <DefaultValues>                            <Value>0,002</Value>                        </DefaultValues>                        <State>HasValidValue</State>                    </ReportParameter>                    <ReportParameter>                        <Name>ImageDpi</Name>                        <Type>Float</Type>                        <Nullable>false</Nullable>                        <AllowBlank>false</AllowBlank>                        <MultiValue>false</MultiValue>                        <QueryParameter>false</QueryParameter>                        <Prompt>ImageDpi</Prompt>                        <PromptUser>true</PromptUser>                        <ValidValuesQueryBased>false</ValidValuesQueryBased>                        <DefaultValuesQueryBased>false</DefaultValuesQueryBased>                        <DefaultValues>                            <Value>150</Value>                        </DefaultValues>                        <State>HasValidValue</State>                    </ReportParameter>                    <ReportParameter>                        <Name>ExcellentImage</Name>                        <Type>String</Type>                        <Nullable>false</Nullable>                        <AllowBlank>false</AllowBlank>                        <MultiValue>false</MultiValue>                        <QueryParameter>false</QueryParameter>                        <Prompt>ExcellentImage</Prompt>                        <PromptUser>true</PromptUser>                        <ValidValuesQueryBased>false</ValidValuesQueryBased>                        <DefaultValuesQueryBased>false</DefaultValuesQueryBased>                        <DefaultValues>                            <Value>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</Value>                        </DefaultValues>                        <State>HasValidValue</State>                    </ReportParameter>                    <ReportParameter>                        <Name>ConnectionString</Name>                        <Type>String</Type>                        <Nullable>false</Nullable>                        <AllowBlank>false</AllowBlank>                        <MultiValue>false</MultiValue>                        <QueryParameter>true</QueryParameter>                        <Prompt>ConnectionString</Prompt>                        <PromptUser>true</PromptUser>                        <ValidValuesQueryBased>false</ValidValuesQueryBased>                        <DefaultValuesQueryBased>false</DefaultValuesQueryBased>                        <DefaultValues>                            <Value>Data Source=(local)\\mssqlserver2016;Initial Catalog=RealEstateGrebe</Value>                        </DefaultValues>                        <State>HasValidValue</State>                    </ReportParameter>                    <ReportParameter>                        <Name>Shortreport</Name>                        <Type>Boolean</Type>                        <Nullable>false</Nullable>                        <AllowBlank>false</AllowBlank>                        <MultiValue>false</MultiValue>                        <QueryParameter>false</QueryParameter>                        <Prompt>Shortreport</Prompt>                        <PromptUser>true</PromptUser>                        <ValidValuesQueryBased>false</ValidValuesQueryBased>                        <DefaultValuesQueryBased>false</DefaultValuesQueryBased>                        <DefaultValues>                            <Value>True</Value>                        </DefaultValues>                        <State>HasValidValue</State>                    </ReportParameter>                </Parameters>                <DataSourcePrompts />                <HasDocumentMap>false</HasDocumentMap>                <ExecutionID>n3hzmyfikddjsu45duioeebm</ExecutionID>                <ReportPath />                <ReportPageSettings>                    <PaperSize>                        <Height>297.00000762939453</Height>                        <Width>210</Width>                    </PaperSize>                    <Margins>                        <Top>6.0000002384185791</Top>                        <Bottom>6.0000002384185791</Bottom>                        <Left>6.0000002384185791</Left>                        <Right>6.0000002384185791</Right>                    </Margins>                </ReportPageSettings>                <AutoRefreshInterval>0</AutoRefreshInterval>                <PageCountMode>Actual</PageCountMode>            </executionInfo>            <warnings>                <Warning>                    <Code>rsOverlappingReportItems</Code>                    <Severity>Warning</Severity>                    <ObjectName>PartnerLogos</ObjectName>                    <ObjectType>Image</ObjectType>                    <Message>Das Bild-Objekt \"PartnerLogos\" und das Bild-Objekt \"Image9\" überlappen einander. Überlappende Berichtselemente werden nicht von allen Renderern unterstützt.</Message>                </Warning>                <Warning>                    <Code>rsOverlappingReportItems</Code>                    <Severity>Warning</Severity>                    <ObjectName>PageNumber</ObjectName>                    <ObjectType>Textbox</ObjectType>                    <Message>Das Textfeld-Objekt \"PageNumber\" und das Bild-Objekt \"Image15\" überlappen einander. Überlappende Berichtselemente werden nicht von allen Renderern unterstützt.</Message>                </Warning>            </warnings>        </LoadReportDefinition2Response>    </soap:Body></soap:Envelope>";
            
			  const string resetExecution2Response = "<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">    <soap:Header>        <ServerInfoHeader xmlns=\"http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices\">            <ReportServerVersionNumber>2015.130.4259.00</ReportServerVersionNumber>            <ReportServerEdition>Standard</ReportServerEdition>            <ReportServerVersion>Microsoft SQL Server Reporting Services Version 13.0.4259.0</ReportServerVersion>            <ReportServerDateTime>2019-12-31T16:06:49</ReportServerDateTime>        </ServerInfoHeader>    </soap:Header>    <soap:Body>        <ResetExecution2Response xmlns=\"http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices\">            <executionInfo>                <HasSnapshot>false</HasSnapshot>                <NeedsProcessing>true</NeedsProcessing>                <AllowQueryExecution>true</AllowQueryExecution>                <CredentialsRequired>false</CredentialsRequired>                <ParametersRequired>false</ParametersRequired>                <ExpirationDateTime>2019-12-31T15:16:49.4550814Z</ExpirationDateTime>                <ExecutionDateTime>0001-01-01T00:00:00</ExecutionDateTime>                <NumPages>0</NumPages>                <Parameters>                    <ReportParameter>                        <Name>ImmobilienId</Name>                        <Type>Integer</Type>                        <Nullable>false</Nullable>                        <AllowBlank>false</AllowBlank>                        <MultiValue>false</MultiValue>                        <QueryParameter>true</QueryParameter>                        <Prompt>ImmobilienId</Prompt>                        <PromptUser>true</PromptUser>                        <ValidValuesQueryBased>false</ValidValuesQueryBased>                        <DefaultValuesQueryBased>false</DefaultValuesQueryBased>                        <DefaultValues>                            <Value>1052</Value>                        </DefaultValues>                        <State>HasValidValue</State>                    </ReportParameter>                    <ReportParameter>                        <Name>MapDistance</Name>                        <Type>Float</Type>                        <Nullable>false</Nullable>                        <AllowBlank>false</AllowBlank>                        <MultiValue>false</MultiValue>                        <QueryParameter>false</QueryParameter>                        <Prompt>MapDistance</Prompt>                        <PromptUser>true</PromptUser>                        <ValidValuesQueryBased>false</ValidValuesQueryBased>                        <DefaultValuesQueryBased>false</DefaultValuesQueryBased>                        <DefaultValues>                            <Value>0,002</Value>                        </DefaultValues>                        <State>HasValidValue</State>                    </ReportParameter>                    <ReportParameter>                        <Name>ImageDpi</Name>                        <Type>Float</Type>                        <Nullable>false</Nullable>                        <AllowBlank>false</AllowBlank>                        <MultiValue>false</MultiValue>                        <QueryParameter>false</QueryParameter>                        <Prompt>ImageDpi</Prompt>                        <PromptUser>true</PromptUser>                        <ValidValuesQueryBased>false</ValidValuesQueryBased>                        <DefaultValuesQueryBased>false</DefaultValuesQueryBased>                        <DefaultValues>                            <Value>150</Value>                        </DefaultValues>                        <State>HasValidValue</State>                    </ReportParameter>                    <ReportParameter>                        <Name>ExcellentImage</Name>                        <Type>String</Type>                        <Nullable>false</Nullable>                        <AllowBlank>false</AllowBlank>                        <MultiValue>false</MultiValue>                        <QueryParameter>false</QueryParameter>                        <Prompt>ExcellentImage</Prompt>                        <PromptUser>true</PromptUser>                        <ValidValuesQueryBased>false</ValidValuesQueryBased>                        <DefaultValuesQueryBased>false</DefaultValuesQueryBased>                        <DefaultValues>                            <Value>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</Value>                        </DefaultValues>                        <State>HasValidValue</State>                    </ReportParameter>                    <ReportParameter>                        <Name>ConnectionString</Name>                        <Type>String</Type>                        <Nullable>false</Nullable>                        <AllowBlank>false</AllowBlank>                        <MultiValue>false</MultiValue>                        <QueryParameter>true</QueryParameter>                        <Prompt>ConnectionString</Prompt>                        <PromptUser>true</PromptUser>                        <ValidValuesQueryBased>false</ValidValuesQueryBased>                        <DefaultValuesQueryBased>false</DefaultValuesQueryBased>                        <DefaultValues>                            <Value>Data Source=(local)\\mssqlserver2016;Initial Catalog=RealEstateGrebe</Value>                        </DefaultValues>                        <State>HasValidValue</State>                    </ReportParameter>                    <ReportParameter>                        <Name>Shortreport</Name>                        <Type>Boolean</Type>                        <Nullable>false</Nullable>                        <AllowBlank>false</AllowBlank>                        <MultiValue>false</MultiValue>                        <QueryParameter>false</QueryParameter>                        <Prompt>Shortreport</Prompt>                        <PromptUser>true</PromptUser>                        <ValidValuesQueryBased>false</ValidValuesQueryBased>                        <DefaultValuesQueryBased>false</DefaultValuesQueryBased>                        <DefaultValues>                            <Value>True</Value>                        </DefaultValues>                        <State>HasValidValue</State>                    </ReportParameter>                </Parameters>                <DataSourcePrompts />                <HasDocumentMap>false</HasDocumentMap>                <ExecutionID>n3hzmyfikddjsu45duioeebm</ExecutionID>                <ReportPath />                <ReportPageSettings>                    <PaperSize>                        <Height>297.00000762939453</Height>                        <Width>210</Width>                    </PaperSize>                    <Margins>                        <Top>6.0000002384185791</Top>                        <Bottom>6.0000002384185791</Bottom>                        <Left>6.0000002384185791</Left>                        <Right>6.0000002384185791</Right>                    </Margins>                </ReportPageSettings>                <AutoRefreshInterval>0</AutoRefreshInterval>                <PageCountMode>Actual</PageCountMode>            </executionInfo>        </ResetExecution2Response>    </soap:Body></soap:Envelope>";
            
			  const string setExecutionParameters2Response = "<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">    <soap:Header>        <ServerInfoHeader xmlns=\"http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices\">            <ReportServerVersionNumber>2015.130.4259.00</ReportServerVersionNumber>            <ReportServerEdition>Standard</ReportServerEdition>            <ReportServerVersion>Microsoft SQL Server Reporting Services Version 13.0.4259.0</ReportServerVersion>            <ReportServerDateTime>2019-12-31T16:09:13</ReportServerDateTime>        </ServerInfoHeader>    </soap:Header>    <soap:Body>        <SetExecutionParameters2Response xmlns=\"http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices\">            <executionInfo>                <HasSnapshot>false</HasSnapshot>                <NeedsProcessing>true</NeedsProcessing>                <AllowQueryExecution>true</AllowQueryExecution>                <CredentialsRequired>false</CredentialsRequired>                <ParametersRequired>false</ParametersRequired>                <ExpirationDateTime>2019-12-31T15:16:59.527Z</ExpirationDateTime>                <ExecutionDateTime>0001-01-01T00:00:00</ExecutionDateTime>                <NumPages>0</NumPages>                <Parameters>                    <ReportParameter>                        <Name>ImmobilienId</Name>                        <Type>Integer</Type>                        <Nullable>false</Nullable>                        <AllowBlank>false</AllowBlank>                        <MultiValue>false</MultiValue>                        <QueryParameter>true</QueryParameter>                        <Prompt>ImmobilienId</Prompt>                        <PromptUser>true</PromptUser>                        <ValidValuesQueryBased>false</ValidValuesQueryBased>                        <DefaultValuesQueryBased>false</DefaultValuesQueryBased>                        <DefaultValues>                            <Value>10</Value>                        </DefaultValues>                        <State>HasValidValue</State>                    </ReportParameter>                    <ReportParameter>                        <Name>MapDistance</Name>                        <Type>Float</Type>                        <Nullable>false</Nullable>                        <AllowBlank>false</AllowBlank>                        <MultiValue>false</MultiValue>                        <QueryParameter>false</QueryParameter>                        <Prompt>MapDistance</Prompt>                        <PromptUser>true</PromptUser>                        <ValidValuesQueryBased>false</ValidValuesQueryBased>                        <DefaultValuesQueryBased>false</DefaultValuesQueryBased>                        <DefaultValues>                            <Value>0,002</Value>                        </DefaultValues>                        <State>HasValidValue</State>                    </ReportParameter>                    <ReportParameter>                        <Name>ImageDpi</Name>                        <Type>Float</Type>                        <Nullable>false</Nullable>                        <AllowBlank>false</AllowBlank>                        <MultiValue>false</MultiValue>                        <QueryParameter>false</QueryParameter>                        <Prompt>ImageDpi</Prompt>                        <PromptUser>true</PromptUser>                        <ValidValuesQueryBased>false</ValidValuesQueryBased>                        <DefaultValuesQueryBased>false</DefaultValuesQueryBased>                        <DefaultValues>                            <Value>150</Value>                        </DefaultValues>                        <State>HasValidValue</State>                    </ReportParameter>                    <ReportParameter>                        <Name>ExcellentImage</Name>                        <Type>String</Type>                        <Nullable>false</Nullable>                        <AllowBlank>false</AllowBlank>                        <MultiValue>false</MultiValue>                        <QueryParameter>false</QueryParameter>                        <Prompt>ExcellentImage</Prompt>                        <PromptUser>true</PromptUser>                        <ValidValuesQueryBased>false</ValidValuesQueryBased>                        <DefaultValuesQueryBased>false</DefaultValuesQueryBased>                        <DefaultValues>                            <Value>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</Value>                        </DefaultValues>                        <State>HasValidValue</State>                    </ReportParameter>                    <ReportParameter>                        <Name>ConnectionString</Name>                        <Type>String</Type>                        <Nullable>false</Nullable>                        <AllowBlank>false</AllowBlank>                        <MultiValue>false</MultiValue>                        <QueryParameter>true</QueryParameter>                        <Prompt>ConnectionString</Prompt>                        <PromptUser>true</PromptUser>                        <ValidValuesQueryBased>false</ValidValuesQueryBased>                        <DefaultValuesQueryBased>false</DefaultValuesQueryBased>                        <DefaultValues>                            <Value>Data Source=(local);Initial Catalog=RealEstateGrebe</Value>                        </DefaultValues>                        <State>HasValidValue</State>                    </ReportParameter>                    <ReportParameter>                        <Name>Shortreport</Name>                        <Type>Boolean</Type>                        <Nullable>false</Nullable>                        <AllowBlank>false</AllowBlank>                        <MultiValue>false</MultiValue>                        <QueryParameter>false</QueryParameter>                        <Prompt>Shortreport</Prompt>                        <PromptUser>true</PromptUser>                        <ValidValuesQueryBased>false</ValidValuesQueryBased>                        <DefaultValuesQueryBased>false</DefaultValuesQueryBased>                        <DefaultValues>                            <Value>False</Value>                        </DefaultValues>                        <State>HasValidValue</State>                    </ReportParameter>                </Parameters>                <DataSourcePrompts />                <HasDocumentMap>false</HasDocumentMap>                <ExecutionID>n3hzmyfikddjsu45duioeebm</ExecutionID>                <ReportPath />                <ReportPageSettings>                    <PaperSize>                        <Height>297.00000762939453</Height>                        <Width>210</Width>                    </PaperSize>                    <Margins>                        <Top>6.0000002384185791</Top>                        <Bottom>6.0000002384185791</Bottom>                        <Left>6.0000002384185791</Left>                        <Right>6.0000002384185791</Right>                    </Margins>                </ReportPageSettings>                <AutoRefreshInterval>0</AutoRefreshInterval>                <PageCountMode>Actual</PageCountMode>            </executionInfo>        </SetExecutionParameters2Response>    </soap:Body></soap:Envelope>";

			  const string render2Response = "<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">    <soap:Header>        <ServerInfoHeader xmlns=\"http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices\">            <ReportServerVersionNumber>2015.130.4259.00</ReportServerVersionNumber>            <ReportServerEdition>Standard</ReportServerEdition>            <ReportServerVersion>Microsoft SQL Server Reporting Services Version 13.0.4259.0</ReportServerVersion>            <ReportServerDateTime>2020-01-01T19:04:49</ReportServerDateTime>        </ServerInfoHeader>    </soap:Header>    <soap:Body>        <Render2Response xmlns=\"http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices\">            <Result></Result>            <Extension>pdf</Extension>            <MimeType>application/pdf</MimeType>            <Warnings>                <Warning>                    <Code>rsRuntimeErrorInExpression</Code>                    <Severity>Warning</Severity>                    <ObjectName>Textbox21.Paragraphs[0].TextRuns[0]</ObjectName>                    <ObjectType>TextRun</ObjectType>                    <Message>Der Value-Ausdruck für das textrun-Objekt \"Textbox21.Paragraphs[0].TextRuns[0]\" enthält einen Fehler: Der Objektverweis wurde nicht auf eine Objektinstanz festgelegt.</Message>                </Warning>                <Warning>                    <Code>rsRuntimeErrorInExpression</Code>                    <Severity>Warning</Severity>                    <ObjectName>Adressentext.Paragraphs[0].TextRuns[0]</ObjectName>                    <ObjectType>TextRun</ObjectType>                    <Message>Der Value-Ausdruck für das textrun-Objekt \"Adressentext.Paragraphs[0].TextRuns[0]\" enthält einen Fehler: Der Objektverweis wurde nicht auf eine Objektinstanz festgelegt.</Message>                </Warning>            </Warnings>            <StreamIds />        </Render2Response>    </soap:Body></soap:Envelope>";
			
			  const string getExecutionInfo2Response = "<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">    <soap:Header>        <ServerInfoHeader xmlns=\"http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices\">            <ReportServerVersionNumber>2015.130.4259.00</ReportServerVersionNumber>            <ReportServerEdition>Standard</ReportServerEdition>            <ReportServerVersion>Microsoft SQL Server Reporting Services Version 13.0.4259.0</ReportServerVersion>            <ReportServerDateTime>2020-01-01T19:08:35</ReportServerDateTime>        </ServerInfoHeader>    </soap:Header>    <soap:Body>        <GetExecutionInfo2Response xmlns=\"http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices\">            <executionInfo>                <HasSnapshot>true</HasSnapshot>                <NeedsProcessing>false</NeedsProcessing>                <AllowQueryExecution>true</AllowQueryExecution>                <CredentialsRequired>false</CredentialsRequired>                <ParametersRequired>false</ParametersRequired>                <ExpirationDateTime>2020-01-01T18:14:59.737Z</ExpirationDateTime>                <ExecutionDateTime>2020-01-01T19:04:32.463</ExecutionDateTime>                <NumPages>0</NumPages>                <Parameters>                    <ReportParameter>                        <Name>ImmobilienId</Name>                        <Type>Integer</Type>                        <Nullable>false</Nullable>                        <AllowBlank>false</AllowBlank>                        <MultiValue>false</MultiValue>                        <QueryParameter>true</QueryParameter>                        <Prompt>ImmobilienId</Prompt>                        <PromptUser>true</PromptUser>                        <ValidValuesQueryBased>false</ValidValuesQueryBased>                        <DefaultValuesQueryBased>false</DefaultValuesQueryBased>                        <DefaultValues>                            <Value>10</Value>                        </DefaultValues>                        <State>HasValidValue</State>                    </ReportParameter>                    <ReportParameter>                        <Name>MapDistance</Name>                        <Type>Float</Type>                        <Nullable>false</Nullable>                        <AllowBlank>false</AllowBlank>                        <MultiValue>false</MultiValue>                        <QueryParameter>false</QueryParameter>                        <Prompt>MapDistance</Prompt>                        <PromptUser>true</PromptUser>                        <ValidValuesQueryBased>false</ValidValuesQueryBased>                        <DefaultValuesQueryBased>false</DefaultValuesQueryBased>                        <DefaultValues>                            <Value>0,002</Value>                        </DefaultValues>                        <State>HasValidValue</State>                    </ReportParameter>                    <ReportParameter>                        <Name>ImageDpi</Name>                        <Type>Float</Type>                        <Nullable>false</Nullable>                        <AllowBlank>false</AllowBlank>                        <MultiValue>false</MultiValue>                        <QueryParameter>false</QueryParameter>                        <Prompt>ImageDpi</Prompt>                        <PromptUser>true</PromptUser>                        <ValidValuesQueryBased>false</ValidValuesQueryBased>                        <DefaultValuesQueryBased>false</DefaultValuesQueryBased>                        <DefaultValues>                            <Value>150</Value>                        </DefaultValues>                        <State>HasValidValue</State>                    </ReportParameter>                    <ReportParameter>                        <Name>ExcellentImage</Name>                        <Type>String</Type>                        <Nullable>false</Nullable>                        <AllowBlank>false</AllowBlank>                        <MultiValue>false</MultiValue>                        <QueryParameter>false</QueryParameter>                        <Prompt>ExcellentImage</Prompt>                        <PromptUser>true</PromptUser>                        <ValidValuesQueryBased>false</ValidValuesQueryBased>                        <DefaultValuesQueryBased>false</DefaultValuesQueryBased>                        <DefaultValues>                            <Value>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</Value>                        </DefaultValues>                        <State>HasValidValue</State>                    </ReportParameter>                    <ReportParameter>                        <Name>ConnectionString</Name>                        <Type>String</Type>                        <Nullable>false</Nullable>                        <AllowBlank>false</AllowBlank>                        <MultiValue>false</MultiValue>                        <QueryParameter>true</QueryParameter>                        <Prompt>ConnectionString</Prompt>                        <PromptUser>true</PromptUser>                        <ValidValuesQueryBased>false</ValidValuesQueryBased>                        <DefaultValuesQueryBased>false</DefaultValuesQueryBased>                        <DefaultValues>                            <Value>Data Source=DEV6\\MSSQLSERVER2016;Initial Catalog=RealEstateGrebe</Value>                        </DefaultValues>                        <State>HasValidValue</State>                    </ReportParameter>                    <ReportParameter>                        <Name>Shortreport</Name>                        <Type>Boolean</Type>                        <Nullable>false</Nullable>                        <AllowBlank>false</AllowBlank>                        <MultiValue>false</MultiValue>                        <QueryParameter>false</QueryParameter>                        <Prompt>Shortreport</Prompt>                        <PromptUser>true</PromptUser>                        <ValidValuesQueryBased>false</ValidValuesQueryBased>                        <DefaultValuesQueryBased>false</DefaultValuesQueryBased>                        <DefaultValues>                            <Value>False</Value>                        </DefaultValues>                        <State>HasValidValue</State>                    </ReportParameter>                </Parameters>                <DataSourcePrompts />                <HasDocumentMap>false</HasDocumentMap>                <ExecutionID>jhzzi33xyhnz5045eachaubq</ExecutionID>                <ReportPath />                <ReportPageSettings>                    <PaperSize>                        <Height>297.00000762939453</Height>                        <Width>210</Width>                    </PaperSize>                    <Margins>                        <Top>6.0000002384185791</Top>                        <Bottom>6.0000002384185791</Bottom>                        <Left>6.0000002384185791</Left>                        <Right>6.0000002384185791</Right>                    </Margins>                </ReportPageSettings>                <AutoRefreshInterval>0</AutoRefreshInterval>                <PageCountMode>Estimate</PageCountMode>            </executionInfo>        </GetExecutionInfo2Response>    </soap:Body></soap:Envelope>";
    }        
}
